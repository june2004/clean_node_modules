import os
from time import time


def getBuffer(num, char=' '):
    buffer = ''
    for i in range(num):
        buffer = buffer + char
    return buffer



rootdir = 'D:'
if __name__ == "__main__":
    t1 = time()
    longestPath = 0
    largestSize = 0
    total = 0
    modules = []
    for path, dirs, files in os.walk(rootdir, topdown=True):
        if 'node_modules' in dirs and 'node_modules' not in path:
            p = path + '\\node_modules'
            size = os.path.getsize(p)
            total += size
            size = size >> 10
            if len(p) > longestPath:
                longestPath = len(p)
            if len(str(size)) > largestSize:
                largestSize = len(str(size))
            modules.append({'path': p, 'size': size})


    divider = getBuffer(longestPath+largestSize+8, '_')
    print(divider)
    for module in modules:
        pb = getBuffer(longestPath - len(module['path']))
        sb = getBuffer(largestSize - len(str(module['size'])))
        print(module['path'], pb, '|', module['size'], sb, 'MB')
        try:
            os.system("rd /s /q %s"%module['path'])
        except Exception as e:
            module['error'] = e
    t2 = time()
    print(divider)
    print('`node_modules` Directories:', len(
        modules), '    Total Size:', total >> 10, 'MB    ', "{:.2f}".format(t2-t1), 'seconds elapsed.')
    print(divider)

    for module in modules:
        if 'error' in module:
            print(module['path'])
            print(module['error'])



